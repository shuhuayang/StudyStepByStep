1.sed
流编辑器，处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。
能够完美的配合正则表达式使用
sed [-nefri] 'command' 输入文本
常用选项：
-n∶使用安静(silent)模式。
常用命令：
 a   ∶新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～
 c   ∶取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！
 d   ∶删除，因为是删除啊，所以 d 后面通常不接任何咚咚；
 i   ∶插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；
 p  ∶列印，亦即将某个选择的资料印出。通常 p 会与参数 sed -n 一起运作～
 s  ∶取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g 就是啦！
 举例：
 [root@localhost ruby] # sed -n '1p' ab           #显示第一行 
 [root@localhost ruby] # sed -n '$p' ab           #显示最后一行
 [root@localhost ruby] # sed -n '1,2p' ab        #显示第一行到第二行
 [root@localhost ruby] # sed -n '2,$p' ab        #显示第二行到最后一行
 [root@localhost ruby] # sed -n '/ruby/p' ab    #查询包括关键字ruby所在所有行，  /正则/    
 [root@localhost ruby] # sed -n '/\$/p' ab        #查询包括关键字$所在所有行，使用反斜线\屏蔽特殊含义
 2.搜索查找
 在指定文件中搜索内容：grep -n 'qucard' catalina.2017-10-16.out
 在指定目录下搜索文件：find /usr/ -name xxx
 
 3.tail
 参数：
 -f 该参数用于监视File文件增长;
 -n 100 从尾部向上100行位置开始读取;
 -n -100 从100行位置读取指定文件;
  eg:
  tail -f -n 500 catalina.2018-03-02.out | grep -n 'ERROR'
  tail -f -n 50 catalina.2018-03-02.out | head -n 5    # 查看最后50行到最后55行
  head -n 20 catalina.2018-03-02.out | tail -n 10   # 查看第10到20行


 寻找masterpid：pstree -ap | grep tomcat
 上传文件：scp /home/vector/下载/redis-4.0.6.tar.gz root@xxxx.xx.xx.xx:~/redis-4.0.6.tar.gz
